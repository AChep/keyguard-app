name: "ðŸŽ‰ Release tag -> GitHub release"

on:
  push:
    tags:
      - 'r*'

jobs:
  build-macos-app:
    runs-on: macos-12
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
      - name: "Set up JDK 17"
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: "Decode signing certificate"
        run: |
          echo ${{ secrets.CERT_B64 }} | base64 -d | zcat > desktopApp/macos-dev.cer
      - name: "Import signing certificate"
        uses: apple-actions/import-codesign-certs@v3
        with:
          p12-filepath: desktopApp/macos-dev.cer
          p12-password: ${{ secrets.CERT_PASSWD }}
      - name: "Setup build env"
        run: |
          python .github/setup_gradle_properties_release.py tag=${{ github.ref_name }}
      - name: "Setup signing config"
        run: |
          echo "" >> gradle.properties
          echo "cert_identity=${{ secrets.CERT_IDENTITY }}" >> gradle.properties
      - name: "Setup notarization config"
        run: |
          echo "" >> gradle.properties
          echo "notarization_apple_id=${{ secrets.NOTARIZATION_APPLE_ID }}" >> gradle.properties
          echo "notarization_password=${{ secrets.NOTARIZATION_PASSWD }}" >> gradle.properties
          echo "notarization_asc_provider=${{ secrets.NOTARIZATION_ASC_PROVIDER }}" >> gradle.properties
      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
      - name: "Build"
        run: ./gradlew :desktopApp:packageDmg :desktopApp:notarizeDmg
      - name: 'Upload logs'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-mac
          path: desktopApp/build/compose/logs/**/*.txt
          retention-days: 30
      - name: 'Upload binaries'
        uses: actions/upload-artifact@v4
        with:
          name: binaries-mac
          path: desktopApp/build/compose/binaries/main/**
          retention-days: 1
      - name: 'Upload .dmg'
        uses: actions/upload-artifact@v4
        with:
          name: app-mac
          path: desktopApp/build/compose/binaries/main/dmg/*.dmg
          retention-days: 1
  build-linux-flatpak-app:
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:gnome-45
      options: --privileged
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: "Set up JDK 17"
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: "Setup build env"
        run: |
          pwd
          git config --global --add safe.directory "$(pwd)"
          python .github/setup_gradle_properties_release.py tag=${{ github.ref_name }}
      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
      - name: "Build"
        run: ./gradlew :desktopApp:bundleFlatpak
      - name: 'Upload .flatpak'
        uses: actions/upload-artifact@v4
        with:
          name: app-linux-flatpak
          path: desktopApp/build/flatpak/Keyguard.flatpak
          retention-days: 1
  build-windows-app:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive
      - name: "Set up JDK 17"
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: |
            11
            17
      - name: "Setup build env"
        run: |
          python .github/setup_gradle_properties_release.py tag=${{ github.ref_name }}
      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
      - name: "Build"
        run: ./gradlew :desktopApp:packageMsi
      - name: 'Upload .msi'
        uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: desktopApp/build/compose/binaries/main/msi/*.msi
          retention-days: 1
  build-android-app:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: "Set up JDK 17"
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: "Prepare env"
        run: |
          echo ${{ secrets.KEYSTORE_B64 }} | base64 -d | zcat >> androidApp/keyguard-release.keystore
          echo ${{ secrets.KEYSTORE_PROPS_B64 }} | base64 -d | zcat >> androidApp/keyguard-release.properties
          echo ${{ secrets.GOOGLE_SERVICES }} | base64 -d | zcat >> androidApp/google-services.json
          python .github/setup_gradle_properties_release.py tag=${{ github.ref_name }}
      - name: "Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.path }}
      - name: "Check and Build licenses"
        run: ./gradlew androidApp:licenseeAndroidNoneRelease
      - name: "Move licenses"
        run: |
          mv -f androidApp/build/reports/licensee/androidNoneRelease/artifacts.json common/src/commonMain/composeResources/files/licenses.json
      - name: "Build"
        run: ./gradlew androidApp:assembleNoneRelease
      - name: 'Upload .apk'
        uses: actions/upload-artifact@v4
        with:
          name: app-android
          path: |
            androidApp/build/outputs/apk/**/*.apk
            androidApp/build/outputs/mapping/**/mapping.txt
          retention-days: 1
  dist:
    runs-on: ubuntu-latest
    needs:
      - build-android-app
      - build-linux-flatpak-app
      - build-macos-app
      - build-windows-app
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: "Generate changelog"
        id: changelog
        uses: metcalfc/changelog-generator@v4.3.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
      - name: "Download Mac app"
        uses: actions/download-artifact@v4
        with:
          name: app-mac
          path: artifacts
      - name: "Download Linux app"
        uses: actions/download-artifact@v4
        with:
          name: app-linux-flatpak
          path: artifacts
      - name: "Download Windows app"
        uses: actions/download-artifact@v4
        with:
          name: app-windows
          path: artifacts
      - name: "Download Android app"
        uses: actions/download-artifact@v4
        with:
          name: app-android
          path: artifacts
      - id: vars
        run: |
          date=$(python .github/convert_tag_release_name.py tag=${{ github.ref_name }})
          echo "date=$date" >> $GITHUB_OUTPUT
      - name: "Create release"
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ steps.vars.outputs.date }}
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            artifacts/*
            artifacts/**/*.apk
